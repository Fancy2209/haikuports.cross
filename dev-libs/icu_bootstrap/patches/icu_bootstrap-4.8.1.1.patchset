From b74fc7f42b7eef77ed0dacad464dc716d97a989a Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Mon, 22 Jul 2013 13:33:03 +0200
Subject: Update Haiku-specific configuration


diff --git a/source/config/mh-haiku b/source/config/mh-haiku
index 09d43d2..42feea1 100644
--- a/source/config/mh-haiku
+++ b/source/config/mh-haiku
@@ -17,6 +17,9 @@ SHAREDLIBCPPFLAGS = -DPIC
 LIBCPPFLAGS =
 THREADSCPPFLAGS =
 
+#
+CPPFLAGS += -DU_CHARSET_IS_UTF8=1
+
 ## Compiler switch to embed a runtime search path
 LD_RPATH=
 LD_RPATH_PRE = -Wl,-rpath,
@@ -31,35 +37,35 @@ STATIC_O = ao
 
 ## Compilation rules
 %.$(STATIC_O): $(srcdir)/%.c
-        $(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(STATICCPPFLAGS) $(STATICCFLAGS) -o $@ $<
 %.o: $(srcdir)/%.c
-        $(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
+	$(COMPILE.c) $(DYNAMICCPPFLAGS) $(DYNAMICCFLAGS) -o $@ $<
 
 %.$(STATIC_O): $(srcdir)/%.cpp
-        $(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(STATICCPPFLAGS) $(STATICCXXFLAGS) -o $@ $<
 %.o: $(srcdir)/%.cpp
-        $(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -o $@ $<
+	$(COMPILE.cc) $(DYNAMICCPPFLAGS) $(DYNAMICCXXFLAGS) -o $@ $<
 
 
 ## Dependency rules
 %.d: $(srcdir)/%.c
-        @echo "generating dependency information for $<"
-        @$(SHELL) -ec '$(GEN_DEPS.c) $< \
-                | sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
-                [ -s $@ ] || rm -f $@'
+	@echo "generating dependency information for $<"
+	@$(SHELL) -ec '$(GEN_DEPS.c) $< \
+		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
+		[ -s $@ ] || rm -f $@'
 
 %.d: $(srcdir)/%.cpp
-        @echo "generating dependency information for $<"
-        @$(SHELL) -ec '$(GEN_DEPS.cc) $< \
-                | sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
-                [ -s $@ ] || rm -f $@'
+	@echo "generating dependency information for $<"
+	@$(SHELL) -ec '$(GEN_DEPS.cc) $< \
+		| sed '\''s%\($*\)\.o[ :]*%\1.o $@ : %g'\'' > $@; \
+		[ -s $@ ] || rm -f $@'
 
 ## Versioned libraries rules
 
 %.$(SO).$(SO_TARGET_VERSION_MAJOR): %.$(SO).$(SO_TARGET_VERSION)
-        $(RM) $@ && ln -s ${<F} $@
+	$(RM) $@ && ln -s ${<F} $@
 %.$(SO): %.$(SO).$(SO_TARGET_VERSION_MAJOR)
-        $(RM) $@ && ln -s ${*F}.$(SO).$(SO_TARGET_VERSION) $@
+	$(RM) $@ && ln -s ${*F}.$(SO).$(SO_TARGET_VERSION) $@
 
 ##  Bind internal references
 
diff --git a/source/configure b/source/configure
index eb6fbc5..66659e7 100755
--- a/source/configure
+++ b/source/configure
@@ -5150,7 +5150,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 *-apple-rhapsody*)	icu_cv_host_frag=mh-darwin ;;
 *-apple-darwin*)	icu_cv_host_frag=mh-darwin ;;
 *-*-beos)       icu_cv_host_frag=mh-beos ;;
-*-*-haiku)      icu_cv_host_frag=mh-haiku ;;
+*-*-haiku*)      icu_cv_host_frag=mh-haiku ;;
 *-*-irix*)	icu_cv_host_frag=mh-irix ;;
 *-dec-osf*) icu_cv_host_frag=mh-alpha-osf ;;
 *-*-nto*)	icu_cv_host_frag=mh-qnx ;;
@@ -6239,7 +6239,7 @@ $as_echo_n "checking for genccode assembly... " >&6; }
 # Check to see if genccode can generate simple assembly.
 GENCCODE_ASSEMBLY=
 case "${host}" in
-*-linux*|i*86-*-*bsd*|i*86-pc-gnu)
+*-linux*|i*86-*-*bsd*|i*86-pc-gnu|*-haiku*)
     if test "$GCC" = yes; then
         # We're using gcc, and the simple -a gcc command line works for genccode
         GENCCODE_ASSEMBLY="-a gcc"
@@ -7748,6 +7748,7 @@ case "${host}" in
 	*-*-nto*)	platform=U_QNX ;;
 	*-dec-osf*) 	platform=U_OSF ;;
 	*-*-beos)		platform=U_BEOS ;;
+	*-*-haiku*)		platform=U_HAIKU ;;
 	*-*-irix*)		platform=U_IRIX ;;
 	*-ncr-*)		platform=U_MPRAS ;;
 	*) 		platform=U_UNKNOWN_PLATFORM ;;
diff --git a/source/configure.in b/source/configure.in
index 1e2a54d..38dac11 100644
--- a/source/configure.in
+++ b/source/configure.in
@@ -604,7 +604,7 @@ AC_MSG_CHECKING([for genccode assembly])
 # Check to see if genccode can generate simple assembly.
 GENCCODE_ASSEMBLY=
 case "${host}" in
-*-linux*|i*86-*-*bsd*|i*86-pc-gnu)
+*-linux*|i*86-*-*bsd*|i*86-pc-gnu|*-haiku*)
     if test "$GCC" = yes; then
         # We're using gcc, and the simple -a gcc command line works for genccode
         GENCCODE_ASSEMBLY="-a gcc"
@@ -1286,6 +1286,7 @@ case "${host}" in
 	*-*-nto*)	platform=U_QNX ;;
 	*-dec-osf*) 	platform=U_OSF ;;
 	*-*-beos)		platform=U_BEOS ;;
+	*-*-haiku*)		platform=U_HAIKU ;;
 	*-*-irix*)		platform=U_IRIX ;;
 	*-ncr-*)		platform=U_MPRAS ;;
 	*) 		platform=U_UNKNOWN_PLATFORM ;;
-- 
1.8.1.4


From 0d02c65bce2edcceda5796ff8b582177cc5ad8d9 Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Mon, 22 Jul 2013 13:36:45 +0200
Subject: Avoid memEquals() on Haiku, as the padding causes problems


diff --git a/source/common/messagepattern.cpp b/source/common/messagepattern.cpp
index b737049..1c10a6e 100644
--- a/source/common/messagepattern.cpp
+++ b/source/common/messagepattern.cpp
@@ -88,8 +88,12 @@ public:
                   int32_t length,
                   UErrorCode &errorCode);
     UBool ensureCapacityForOneMore(int32_t oldLength, UErrorCode &errorCode);
-    UBool memEquals(const MessagePatternList<T, stackCapacity> &other, int32_t length) const {
-        return 0==uprv_memcmp(a.getAlias(), other.a.getAlias(), length*sizeof(T));
+    UBool equals(const MessagePatternList<T, stackCapacity> &other, int32_t length) const {
+		for (int32_t i=0; i<length; ++i) {
+            if (!(a.getAlias()[i] == other.a.getAlias()[i]))
+                return FALSE;
+		}
+        return TRUE;
     }
 
     MaybeStackArray<T, stackCapacity> a;
@@ -309,7 +313,7 @@ MessagePattern::operator==(const MessagePattern &other) const {
         msg==other.msg &&
         // parts.equals(o.parts)
         partsLength==other.partsLength &&
-        (partsLength==0 || partsList->memEquals(*other.partsList, partsLength));
+        (partsLength==0 || partsList->equals(*other.partsList, partsLength));
     // No need to compare numericValues if msg and parts are the same.
 }
 
-- 
1.8.1.4


From 6deb9c651667762df738c4b070f23131ab34021f Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Mon, 22 Jul 2013 13:43:52 +0200
Subject: Avoid problems with too small buffer on Haiku


diff --git a/source/tools/pkgdata/pkgdata.cpp b/source/tools/pkgdata/pkgdata.cpp
index 9bbbe7d..68af406 100644
--- a/source/tools/pkgdata/pkgdata.cpp
+++ b/source/tools/pkgdata/pkgdata.cpp
@@ -476,7 +476,7 @@ main(int argc, char* argv[]) {
 
 static int runCommand(const char* command, UBool specialHandling) {
     char *cmd = NULL;
-    char cmdBuffer[SMALL_BUFFER_MAX_SIZE];
+    char cmdBuffer[64000];
     int32_t len = strlen(command);
 
     if (len == 0) {
-- 
1.8.1.4


From 32487cd333383b9e94edee1bb231ce30241b1f9c Mon Sep 17 00:00:00 2001
From: Oliver Tappe <zooey@hirschkaefer.de>
Date: Mon, 22 Jul 2013 13:44:20 +0200
Subject: Avoid warnings about casts


diff --git a/source/i18n/alphaindex.cpp b/source/i18n/alphaindex.cpp
index cf24770..e936535 100644
--- a/source/i18n/alphaindex.cpp
+++ b/source/i18n/alphaindex.cpp
@@ -196,7 +196,7 @@ void AlphabeticIndex::buildIndex(UErrorCode &status) {
 
     UnicodeSet labelSet;
     for (int32_t psIndex=0; psIndex<preferenceSorting.size(); psIndex++) {
-        UnicodeString item = *static_cast<const UnicodeString *>(preferenceSorting.elementAt(psIndex));
+        UnicodeString item = *static_cast<UnicodeString *>(preferenceSorting.elementAt(psIndex));
         // TODO:  Since preferenceSorting was originally populated from the contents of a UnicodeSet,
         //        is it even possible for duplicates to show up in this check?
         if (labelSet.contains(item)) {
@@ -240,7 +240,7 @@ void AlphabeticIndex::buildIndex(UErrorCode &status) {
         int32_t count = 0;
         int32_t old = -1;
         for (int32_t srcIndex=0; srcIndex<labels_->size(); srcIndex++) {
-            const UnicodeString *str = static_cast<const UnicodeString *>(labels_->elementAt(srcIndex));
+            const UnicodeString *str = static_cast<UnicodeString *>(labels_->elementAt(srcIndex));
             ++count;
             const int32_t bump = count * maxLabelCount_ / size;
             if (bump == old) {
@@ -528,7 +528,7 @@ AlphabeticIndex &AlphabeticIndex::setMaxLabelCount(int32_t maxLabelCount, UError
 const UnicodeString &AlphabeticIndex::getOverflowComparisonString(const UnicodeString &lowerLimit, UErrorCode &/*status*/) {
     for (int32_t i=0; i<firstScriptCharacters_->size(); i++) {
         const UnicodeString *s =
-                static_cast<const UnicodeString *>(firstScriptCharacters_->elementAt(i));
+                const_cast<const UnicodeString *>(static_cast<UnicodeString *>(firstScriptCharacters_->elementAt(i)));
         if (collator_->compare(*s, lowerLimit) > 0) {
             return *s;
         }
@@ -735,8 +735,10 @@ static int32_t U_CALLCONV
 sortCollateComparator(const void *context, const void *left, const void *right) {
     const UHashTok *leftTok = static_cast<const UHashTok *>(left);
     const UHashTok *rightTok = static_cast<const UHashTok *>(right);
-    const UnicodeString *leftString  = static_cast<const UnicodeString *>(leftTok->pointer);
-    const UnicodeString *rightString = static_cast<const UnicodeString *>(rightTok->pointer);
+    const UnicodeString *leftString  
+        = const_cast<const UnicodeString *>(static_cast<UnicodeString *>(leftTok->pointer));
+    const UnicodeString *rightString 
+        = const_cast<const UnicodeString *>(static_cast<UnicodeString *>(rightTok->pointer));
     const Collator *col = static_cast<const Collator *>(context);
 
     if (leftString == rightString) {
@@ -760,8 +762,10 @@ static int32_t U_CALLCONV
 recordCompareFn(const void *context, const void *left, const void *right) {
     const UHashTok *leftTok = static_cast<const UHashTok *>(left);
     const UHashTok *rightTok = static_cast<const UHashTok *>(right);
-    const AlphabeticIndex::Record *leftRec  = static_cast<const AlphabeticIndex::Record *>(leftTok->pointer);
-    const AlphabeticIndex::Record *rightRec = static_cast<const AlphabeticIndex::Record *>(rightTok->pointer);
+    const AlphabeticIndex::Record *leftRec  
+        = const_cast<const AlphabeticIndex::Record *>(static_cast<AlphabeticIndex::Record *>(leftTok->pointer));
+    const AlphabeticIndex::Record *rightRec 
+        = const_cast<const AlphabeticIndex::Record *>(static_cast<AlphabeticIndex::Record *>(rightTok->pointer));
     const Collator *col = static_cast<const Collator *>(context);
 
     Collator::EComparisonResult r = col->compare(leftRec->sortingName_, rightRec->sortingName_);
@@ -1087,8 +1091,8 @@ static int32_t U_CALLCONV
 PreferenceComparator(const void *context, const void *left, const void *right) {
     const UHashTok *leftTok  = static_cast<const UHashTok *>(left);
     const UHashTok *rightTok = static_cast<const UHashTok *>(right);
-    const UnicodeString *s1  = static_cast<const UnicodeString *>(leftTok->pointer);
-    const UnicodeString *s2  = static_cast<const UnicodeString *>(rightTok->pointer);
+    const UnicodeString *s1  = const_cast<const UnicodeString *>(static_cast<UnicodeString *>(leftTok->pointer));
+    const UnicodeString *s2  = const_cast<const UnicodeString *>(static_cast<UnicodeString *>(rightTok->pointer));
     UErrorCode &status       = *(UErrorCode *)(context);   // Cast off both static and const.
     if (s1 == s2) {
         return 0;
-- 
1.8.1.4
