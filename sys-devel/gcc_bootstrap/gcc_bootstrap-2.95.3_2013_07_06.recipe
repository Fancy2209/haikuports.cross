SUMMARY="C/C++ cross-compiler for target ${targetMachineTriple}"
DESCRIPTION="Standard compiler for x86_gcc2 platform, ABI-compatible with BeOS R5."
HOMEPAGE="http://gcc.gnu.org"
LICENSE="
	GNU GPL v2
	GNU LGPL v2
	"

binutilsVersion=2.17_2013_04_21

COPYRIGHT="1988-2000 Free Software Foundation, Inc."
SRC_URI="
	git+file://$portBaseDir/../gcc_cross_x86_gcc2/download/BuildtoolsPM.git#db2a6d28f6c6a92cfb1c619b0828dfbf6b87ca30
	git+git://github.com/haiku/BuildtoolsPM.git#db2a6d28f6c6a92cfb1c619b0828dfbf6b87ca30
	"
REVISION="1"
ARCHITECTURES="x86_gcc2"

PROVIDES="
	gcc_bootstrap = $portVersion compat >= 2.95.3
	cmd:c++ = $portVersion compat >= 2.95.3
	cmd:c++filt = $portVersion compat >= 2.95.3
	cmd:cc = $portVersion compat >= 2.95.3
	cmd:cpp = $portVersion compat >= 2.95.3
	cmd:g++ = $portVersion compat >= 2.95.3
	cmd:gcc = $portVersion compat >= 2.95.3
	cmd:gcov = 1.5 compat >= 1.5
	cmd:protoize = $portVersion compat >= 2.95.3
	cmd:unprotoize = $portVersion compat >= 2.95.3
	"

REQUIRES="
	haiku >= $haikuVersion
	"
BUILD_REQUIRES="
	$REQUIRES
	binutils_cross_${targetArchitecture}
	gcc_cross_${targetArchitecture}
	"
BUILD_PREREQUIRES="
	haiku_devel >= $haikuVersion
	cmd:autoconf
	cmd:flex
	cmd:gcc
	cmd:ld
	cmd:make
	cmd:sed
	cmd:tar
	cmd:makeinfo
	"

SOURCE_DIR="$portVersionedName/legacy/gcc"

sourceDir=$(pwd)
relativeInstallDir="develop/tools/${portVersionedName}"
installDir="$prefix/$relativeInstallDir"
toolsBinDir="$prefix/develop/tools/bin"
objectsDir=$(pwd)/../${portVersionedName}-obj

# determine target architecture of this recipe from its name
recipeArch=$(echo $portName | cut -d_ -f 3-4)

BUILD()
{
	rm -rf $objectsDir

	# Touch some files generated by bison, so that bison won't run to update
	# them. Fixes issues with newer bison versions.
	# And while at it, touch gperf target, too (as gperf may not be installed).
	(cd $sourceDir/gcc; touch c-parse.c c-parse.h cexp.c cp/parse.c \
		cp/parse.h c-gperf.h)

	mkdir -p $objectsDir
	cd $objectsDir

	mkdir syslibs

	# build gcc
	CFLAGS="-O2 -U_FORTIFY_SOURCE" CXXFLAGS="-O2" "$sourceDir/configure" \
		--build=$buildMachineTriple --host=$targetMachineTriple \
		--target=$targetMachineTriple --prefix=$installDir \
		--disable-nls --enable-shared --enable-languages=c,c++ \
		--disable-hybrid-secondary

	make
}

INSTALL()
{
	cd $objectsDir
	make install

	### Symlinks ##############################################

	echo "Creating required symlinks"

	# convert to absolute links to relative ones
	cd $installDir/bin
	ln -sfn $targetMachineTriple-g++ $targetMachineTriple-c++
	ln -sfn $targetMachineTriple-gcc $targetMachineTriple-cc
	
	# make all commands available in develop/tools/bin (which
	# haikuporter will add to the path when cross building)
	mkdir -p $toolsBinDir
	cd $toolsBinDir
	ln -sfn ../${portVersionedName}/bin/$targetMachineTriple-* .
	ln -sfn ../${portVersionedName}/bin/cpp $targetMachineTriple-cpp
	ln -sfn ../${portVersionedName}/bin/gcov $targetMachineTriple-gcov
	
	### Strip #################################################
	
	echo "Strip debug info"

	cd $installDir
	strip --strip-debug bin/*
	strip --strip-debug lib/gcc-lib/$targetMachineTriple/2.95.3-haiku-*/* \
		  &>/dev/null || true
	
	### Cleanup ###############################################
	
	echo "Cleanup"
	
	cd $installDir
	rm -rf info
	rm -rf share
	rm man/man1/cccp.1
	
	rm -f lib/gcc-lib/$targetMachineTriple/2.95.3-haiku-*/include/math.h
	
	### C++ includes ##########################################
	
	echo "Install C++ includes & library"
	
	rm -rf include/g++
	ln -snf /boot/system/develop/headers/c++/2.95.3 include/g++
	
	ln -snf /boot/system/lib/libstdc++.r4.so lib/
	ln -snf /boot/system/lib/libstdc++.so lib/
}
