SUMMARY="C/C++ cross-compiler for target ${targetMachineTriple}"
DESCRIPTION="Standard compiler for x86_gcc2 platform, ABI-compatible with BeOS R5."
HOMEPAGE="http://gcc.gnu.org"
LICENSE="
	GNU GPL v2
	GNU LGPL v2
	"
COPYRIGHT="1988-2000 Free Software Foundation, Inc."
SRC_URI="
	git+file://$portBaseDir/../binutils_cross_x86_gcc2/work-2.17_2013_04_21/sources/binutils_cross_x86_gcc2-2.17_2013_04_21#d0613f2026ca25e7f673188291b63fd5d7a51c72
	git+git://github.com/haiku/BuildtoolsPM.git#d0613f2026ca25e7f673188291b63fd5d7a51c72
	"
REVISION="1"
ARCHITECTURES="x86_gcc2 ?x86"

PROVIDES="
	gcc_cross_$targetArchitecture = $portVersion compat >= 2.95.3
	cmd:${targetMachineTripleAsName}_c++ = $portVersion compat >= 2.95.3
	cmd:${targetMachineTripleAsName}_cpp = $portVersion compat >= 2.95.3
	cmd:${targetMachineTripleAsName}_g++ = $portVersion compat >= 2.95.3
	cmd:${targetMachineTripleAsName}_gcc = $portVersion compat >= 2.95.3
	cmd:${targetMachineTripleAsName}_gcov = 1.5 compat >= 1.5
	cmd:${targetMachineTripleAsName}_protoize = $portVersion compat >= 2.95.3
	cmd:${targetMachineTripleAsName}_unprotoize = $portVersion compat >= 2.95.3
	"

REQUIRES="
	haiku >= $haikuVersion
	haiku_cross_devel >= $haikuVersion
	binutils_cross_${targetArchitecture}
	"
BUILD_REQUIRES="
	$REQUIRES
	"
BUILD_PREREQUIRES="
	haiku_devel >= $haikuVersion
	cmd:autoconf
	cmd:flex
	cmd:gcc
	cmd:ld
	cmd:make
	cmd:sed
	cmd:tar
	cmd:makeinfo
	"

SOURCE_DIR="$portVersionedName"

gccDir=$(pwd)/legacy/gcc
relativeGccInstallDir="develop/tools/${portVersionedName}"
gccInstallDir="$prefix/$relativeGccInstallDir"
objectsDir=$(pwd)/../${portVersionedName}-obj

BUILD()
{
	rm -rf $objectsDir

	# Touch some files generated by bison, so that bison won't run to update
	# them. Fixes issues with newer bison versions.
	# And while at it, touch gperf target, too (as gperf may not be installed).
	(cd $gccDir/gcc; touch c-parse.c c-parse.h cexp.c cp/parse.c \
		cp/parse.h c-gperf.h)

	mkdir -p $objectsDir
	cd $objectsDir

	mkdir sysincludes
	systemHeadersDir=$(finddir B_SYSTEM_HEADERS_DIRECTORY)
	cp -r $systemHeadersDir/config sysincludes/
	cp -r $systemHeadersDir/os sysincludes/
	cp -r $systemHeadersDir/posix sysincludes/

	mkdir syslibs
	
	# build gcc
	binutilsBinDir=$portPackageLinksDir/binutils_cross_$targetArchitecture/bin
	CFLAGS="-O2 -U_FORTIFY_SOURCE" CXXFLAGS="-O2" "$gccDir/configure" \
		--host=$hostMachineTriple --build=$hostMachineTriple \
		--target=$targetMachineTriple --prefix=$gccInstallDir \
		--disable-nls --enable-shared=yes --enable-languages=c,c++ \
		--with-as=$binutilsBinDir/${targetMachineTriple}-as \
		--with-ld=$binutilsBinDir/${targetMachineTriple}-ld \
		--with-headers=$objectsDir/sysincludes \
		--with-libs=$objectsDir/syslibs

	# create libsubdir as it is being used as part of relative path access
	# to the sys-include folder when building libgcc2.a:
	gcc_version=$(grep 'gcc_version =' Makefile | cut -d' ' -f 3)
	mkdir -p $gccInstallDir/lib/gcc-lib/$targetMachineTriple/$gcc_version

	# hack the Makefile to avoid trouble with stuff we don't need anyway
	sedExpr=
	for toRemove in libiberty libio libjava libobjc libstdc++; do
		sedExpr="$sedExpr -e 's@^\(TARGET_CONFIGDIRS =.*\)$toRemove\(.*\)@\1\2@'"
	done
	eval "sed -i $sedExpr Makefile"

	make cross
}

INSTALL()
{
	cd $objectsDir
	make install

	base=$gccInstallDir

	### Symlinks ##############################################

	echo "Creating required symlinks"

	# convert to absolute links to relative ones
	cd $base/bin
	ln -sfn $targetMachineTriple-g++ $targetMachineTriple-c++
	ln -sfn $targetMachineTriple-gcc $targetMachineTriple-cc
	
	# make all tools available via default paths
	echo "Symlinking binaries into default path"
	mkdir -p $prefix/bin
	cd $prefix/bin
	ln -sfn ../$relativeGccInstallDir/bin/$targetMachineTriple-* .
	
	### Strip #################################################
	
	echo "Strip debug info"

	cd $base
	strip --strip-debug bin/*
	strip --strip-debug i586-pc-haiku/bin/*
	strip --strip-debug lib/gcc-lib/i586-pc-haiku/2.95.3-haiku-*/* \
		  &>/dev/null || true
	
	### Cleanup ###############################################
	
	echo "Cleanup"
	
	if [ -d $base/info -o -d $base/share ]; then
		rm -rf $base/info
		rm -rf $base/share
	fi
	rm $base/man/man1/cccp.1
	
	rm -f $base/lib/gcc-lib/i586-pc-haiku/2.95.3-haiku-*/include/math.h
	rm -rf $base/i586-pc-haiku/lib
	ln -sfn /boot/system/develop/cross/lib/$targetArchitecture $base/$targetMachineTriple/lib
	rm -rf $base/i586-pc-haiku/sys-include
	ln -sfn /boot/system/develop/cross/headers/$targetArchitecture $base/$targetMachineTriple/sys-include
	
	### C++ includes ##########################################
	
	echo "Install C++ includes & library"
	
	rm -rf $base/include/g++
	ln -snf /boot/system/develop/headers/c++/2.95.3 $base/include/g++
	
	ln -snf /boot/system/lib/libstdc++.r4.so $base/lib/
	ln -snf /boot/system/lib/libstdc++.so $base/lib/
}
