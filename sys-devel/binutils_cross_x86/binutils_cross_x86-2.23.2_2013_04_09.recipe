SUMMARY="Assembler, linker and binary tools for target ${targetMachineTriple}"
HOMEPAGE="http://www.gnu.org/software/binutils"
SRC_URI="
	git+https://github.com/haiku/BuildtoolsPM.git#db2a6d28f6c6a92cfb1c619b0828dfbf6b87ca30
	"
REVISION="1"
ARCHITECTURES="x86"
LICENSE="
	GNU GPL v2
	GNU LGPL v2
	"
COPYRIGHT="1988-2013 Free Software Foundation, Inc."

# determine recipe architecture from port name
recipeArchitecture=$(echo $portName | cut -d_ -f3)

PROVIDES="
	binutils_cross_${recipeArchitecture} = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_addr2line = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_ar = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_as = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_c++filt = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_elfedit = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_gprof = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_ld = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_ld.bfd = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_nm = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_objcopy = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_objdump = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_ranlib = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_readelf = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_size = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_strings = $portVersion compat >= 2.23
	cmd:${targetMachineTripleAsName}_strip = $portVersion compat >= 2.23
	"

REQUIRES="
	haiku >= $haikuVersion
	haiku_cross_devel_${recipeArchitecture} >= $haikuVersion
	"

BUILD_REQUIRES="
	haiku_cross_devel_${recipeArchitecture} >= $haikuVersion
	"

BUILD_PREREQUIRES="
	haiku_devel >= $haikuVersion
	cmd:autoconf
	cmd:flex
	cmd:gcc
	cmd:ld
	cmd:make
	cmd:makeinfo
	cmd:sed
	cmd:tar
	zlib_devel
	"

SOURCE_DIR="$portVersionedName/binutils"

BUILD_PACKAGE_ACTIVATION_PHASE=INSTALL

sourceDir=$(pwd)
relativeInstallDir="develop/tools/${portVersionedName}"
installDir="$prefix/$relativeInstallDir"
toolsBinDir="$prefix/develop/tools/bin"
objectsDir=$(pwd)/../${portVersionedName}-obj

BUILD()
{
	if [ $recipeArchitecture != $targetArchitecture ]; then
		echo "*** refusing to build $portName for $targetArchitecture"
		echo "*** please set appropriate target architecture in haikuports.conf"
		exit 1
	fi

# TODO: drop this once we have a proper gcc4 compiler
mkdir -p /boot/develop
ln -sfn /boot/common/develop/abi /boot/develop/abi
ln -sfn /boot/system/develop/headers /boot/develop/headers

	rm -rf $objectsDir

	# Touch all *.info files, as newer texinfos don't like their format
	(cd $sourceDir; find . -name \*.info | xargs touch)

	mkdir -p $objectsDir
	cd $objectsDir

	CFLAGS=-O2 CXXFLAGS=-O2 "$sourceDir/configure" \
		--build=$buildMachineTriple --host=$buildMachineTriple \
		--target=$targetMachineTriple --prefix=$installDir \
		--libexecdir=$installDir/lib --mandir=$manDir \
		--disable-nls --disable-shared --disable-werror \
		--with-sysroot=$crossSysrootDir
	make
}

INSTALL()
{
# TODO: drop this once we have a proper gcc4 compiler
mkdir -p /boot/develop
ln -sfn /boot/common/develop/abi /boot/develop/abi
ln -sfn /boot/system/develop/headers /boot/develop/headers

	cd $objectsDir

	make install

	### Strip #################################################

	echo "Strip debug info"

	strip --strip-debug $installDir/bin/*
	strip --strip-debug $installDir/$targetMachineTriple/bin/*

	### Symlinks ##############################################

	echo "Creating required symlinks"

	cd $installDir/bin
	for p in ar as ld ld.bfd nm objdump ranlib strip; do
		ln -sfn ../$targetMachineTriple/bin/$p \
			$targetMachineTriple-$p
	done
	cd $installDir/$targetMachineTriple/bin
	ln -sfn ld.bfd ld

	# make all commands available in develop/tools/bin (which
	# haikuporter will add to the path when cross building)
	mkdir -p $toolsBinDir
	cd $toolsBinDir
	ln -sfn ../${portVersionedName}/bin/* .

	### Cleanup #################################################

	echo "Cleanup"

	cd $installDir
	rm -rf share
	rm -rf lib

	# delete man pages for commands that we aren't including
	cd $manDir
	for cmd in dlltool nlmconv windmc windres; do
		rm -f man1/$targetMachineTriple-$cmd.1
	done
}

DESCRIPTION="
	The GNU Binutils are a collection of binary tools. The main ones are:

	    ld - the GNU linker.
	    as - the GNU assembler.

	But they also include:

	    addr2line - Converts addresses into filenames and line numbers.
	    ar - A utility for creating, modifying and extracting from archives.
	    c++filt - Filter to demangle encoded C++ symbols.
	    nm - Lists symbols from object files.
	    objcopy - Copys and translates object files.
	    objdump - Displays information from object files.
	    ranlib - Generates an index to the contents of an archive.
	    readelf - Displays information from any ELF format object file.
	    size - Lists the section sizes of an object or archive file.
	    strings - Lists printable strings from files.
	    strip - Discards symbols.

	The tools of this package can be used for cross-builds to $targetMachineTriple.
	"
